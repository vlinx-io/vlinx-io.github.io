(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[133],{5337:function(a,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/create-multiple-executable-files",function(){return s(7846)}])},7846:function(a,n,s){"use strict";s.r(n),s.d(n,{__N_SSG:function(){return p}});var o=s(5893),e=s(1151);function t(a){let n=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code"},(0,e.ah)(),a.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{children:"How to create multiple executable files"}),"\n",(0,o.jsx)(n.p,{children:"Normally Protector4J creates an executable file for each encryption task to run your application."}),"\n",(0,o.jsx)(n.p,{children:"However, in some cases, an application may need to have more than one executable files, such as a main program, an update program or others."}),"\n",(0,o.jsx)(n.p,{children:'If you open the output directory, you can see an executable file, and a configuration file with the same name and ".json" extension. If you need to create additional executables, just copy and rename them, for example app01[.exe] with app01.json, then open the app01.json file and modify "LibFolder" and "MainClass"'}),"\n",(0,o.jsx)(n.p,{children:"By default the executable will take all the jar files under vlxlib as the class path, you can create different LibFolder for different executables and copy the corresponding jar files to the corresponding LibFolder. For example, create an app01 folder and move all the jar files corresponding to app01 from vlxlib into it, the following file configuration shows that."}),"\n",(0,o.jsx)(n.pre,{language:"json",code:"{\n	&#34;MainClass&#34;      : &#34;app01.MainClass&#34;,\n	&#34;LibFolder&#34;      : &#34;app01&#34;,\n	&#34;Verbose&#34;        : false,\n	&#34;HideConsole&#34;    : false,\n	&#34;IncludeJavaFX&#34;  : true,\n	&#34;Splash&#34;         : &#34;&#34;,\n	&#34;SWTApplication&#34; : false\n}\n",children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;MainClass&amp;#34;      </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;app</span><span style="color: var(--shiki-token-constant)">01</span><span style="color: var(--shiki-color-text)">.MainClass&amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;LibFolder&amp;#34;      </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;app</span><span style="color: var(--shiki-token-constant)">01</span><span style="color: var(--shiki-color-text)">&amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;Verbose&amp;#34;        </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;HideConsole&amp;#34;    </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;IncludeJavaFX&amp;#34;  </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;Splash&amp;#34;         </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;&amp;#</span><span style="color: var(--shiki-token-constant)">34</span><span style="color: var(--shiki-color-text)">;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">	&amp;#34;SWTApplication&amp;#34; </span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})})]})}var p=!0;n.default=function(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,e.ah)(),a.components);return n?(0,o.jsx)(n,Object.assign({},a,{children:(0,o.jsx)(t,a)})):t(a)}}},function(a){a.O(0,[774,888,179],function(){return a(a.s=5337)}),_N_E=a.O()}]);