(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[167],{1715:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/update-tomcat-application",function(){return n(7592)}])},7592:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return s}});var r=n(5893),o=n(1151);function i(e){let t=Object.assign({h1:"h1",h2:"h2",p:"p",h3:"h3",h4:"h4",img:"img"},(0,o.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{children:"How to update existing encrypted Tomcat Applications"}),"\n",(0,r.jsx)(t.h2,{id:"the-strucutre-of-tomcat-application-generated-by-protector4-j",children:"The strucutre of Tomcat application generated by Protector4J"}),"\n",(0,r.jsx)(t.p,{children:"After using Protector4J to process your application, a complete Tomcat runtime environment will be output in the output folder. You can use the startup.sh or startup.bat script in the bin directory to run the Tomcat program as in the past. Our customized version JRE is also in the bin directory, you can find a vlxjre folder there."}),"\n",(0,r.jsx)(t.h3,{children:"webapps"}),"\n",(0,r.jsx)(t.p,{children:"You can also find your application in the webapps directory, but the original WEB-INF/classes folder no longer exists. This is because in order to protect your application architecture so that external users cannot even obtain the name information of the class, we have packaged the content of WEB-INF/classes into WEB-INF/vlxapp.jar, which is a jarx format, It is the newly introduced format in Protector4J 2.0."}),"\n",(0,r.jsx)(t.h2,{id:"how-to-update-existing-applications",children:"How to update existing applications"}),"\n",(0,r.jsx)(t.p,{children:"You may want to be able to update existing applications directly, without outputting a full Tomcat runtime environment each time"}),"\n",(0,r.jsx)(t.h3,{children:"KeySeed"}),"\n",(0,r.jsx)(t.p,{children:"Protector4J will request a random and unique key from the server for every encryption task, and since the key is different for each task, the encrypted jar files obtained from different tasks cannot be used together. Therefore, we provide a KeySeed feature, the same KeySeed will generate the same key, and the jar files encrypted under the same KeySeed can be used together. Currently KeySeed is only available for licensed users."}),"\n",(0,r.jsx)(t.h3,{children:"Updating an existing tomcat application"}),"\n",(0,r.jsx)(t.h4,{children:"1. Specify a KeySeed when generating the application for the first time"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://protector4j.com/resources/screenshots/output.png",alt:""})}),"\n",(0,r.jsx)(t.h4,{children:'2. Select the war or jar file that needs to be updated and check "Only Encrypt Jar Files"'}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://protector4j.com/resources/screenshots/selection.png",alt:""})}),"\n",(0,r.jsx)(t.h4,{children:"3. Specify the same KeySeed on the output page"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://protector4j.com/resources/screenshots/output.png",alt:""})}),"\n",(0,r.jsx)(t.h4,{children:"4.Check the output folder and copy the newly generated application directory to webapps"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://protector4j.com/resources/screenshots/result.png",alt:""})})]})}var s=!0;t.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=1715)}),_N_E=e.O()}]);