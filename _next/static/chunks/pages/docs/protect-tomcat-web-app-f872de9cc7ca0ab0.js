(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[101],{9895:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/protect-tomcat-web-app",function(){return s(2378)}])},2378:function(n,e,s){"use strict";s.r(e),s.d(e,{__N_SSG:function(){return o}});var a=s(5893),r=s(1151);function t(n){let e=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",h3:"h3",img:"img",strong:"strong",h4:"h4",code:"code",pre:"pre"},(0,r.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{children:"保护Tomcat Web应用"}),"\n",(0,a.jsx)(e.h2,{id:"",children:"入门视频"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://www.youtube.com/watch?v=7d8afvHc2V4",children:"▶️ https://www.youtube.com/watch?v=7d8afvHc2V4"})}),"\n",(0,a.jsx)(e.h2,{id:"",children:"下载"}),"\n",(0,a.jsxs)(e.p,{children:["访问 ",(0,a.jsx)(e.a,{href:"https://protector4j.com/download",children:"https://protector4j.com/download"})," 下载最新版。"]}),"\n",(0,a.jsx)(e.h2,{id:"",children:"安装"}),"\n",(0,a.jsx)(e.h3,{children:"Windows 与 Linux"}),"\n",(0,a.jsxs)(e.p,{children:["没有特别的安装步骤, 只需要",(0,a.jsx)(e.a,{href:"https://protector4j.com/download",children:"下载"}),"压缩包并解压即可。"]}),"\n",(0,a.jsx)(e.h3,{children:"macOS"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.a,{href:"https://protector4j.com/download",children:"下载"}),"dmg文件并拖拽Protector4J到Applications, 程序的实际内容在Protector4J.app/Contents/protector4j-mac"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/mac-app-installation.png",alt:""})}),"\n",(0,a.jsx)(e.h2,{id:"gui-java-se",children:"使用GUI工具加密JavaSE应用"}),"\n",(0,a.jsxs)(e.p,{children:["进入Protector4J文件夹， 运行",(0,a.jsx)(e.strong,{children:"p4j-ui[.exe]"})," , 你将会看到下面的用户界面"]}),"\n",(0,a.jsx)(e.p,{children:"对于macOS用户, 像普通mac应用一样双击Protector4J.app即可"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/ui-tool.png",alt:""})}),"\n",(0,a.jsx)(e.h3,{children:"登录"}),"\n",(0,a.jsx)(e.p,{children:"如果你已经购买了授权,  请点击右上角的登录按钮，输入用户信息，如果没有授权，您仍然可以试用这个工具"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/login-dialog.png",alt:""})}),"\n",(0,a.jsx)(e.h3,{children:"选择应用类型"}),"\n",(0,a.jsx)(e.p,{children:'在程序类型页面点击"JavaSE Application"按钮。'}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/app-type.png",alt:""})}),"\n",(0,a.jsx)(e.h3,{children:"选择需要加密的jar/war文件"}),"\n",(0,a.jsx)(e.p,{children:"选择需要加密的jar/war文件，可以单选或者多选"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/choose-jars.png",alt:""})}),"\n",(0,a.jsx)(e.h4,{children:"Options"}),"\n",(0,a.jsx)(e.h4,{children:"Just encrypt jar files"}),"\n",(0,a.jsx)(e.p,{children:"只加密jar文件，不输出整个jre, 这个选项通常与KeySeed特性结合使用，用于更新现有的程序。"}),"\n",(0,a.jsx)(e.h3,{children:"输出"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/output-page.png",alt:""})}),"\n",(0,a.jsx)(e.h4,{children:"Java版本选择"}),"\n",(0,a.jsx)(e.p,{children:"选择对应的Java版本, 支持Java 8, Java 11 and Java 17."}),"\n",(0,a.jsx)(e.h4,{children:"创建新文件夹"}),"\n",(0,a.jsxs)(e.p,{children:["默认选择, 加密任务会在输出文件夹中创建一个名为 ",(0,a.jsx)(e.code,{children:"p4j-[task-id]"}),"的文件夹, 最终输出的结果存储在这个文件夹中。"]}),"\n",(0,a.jsx)(e.h4,{children:"KeySeed"}),"\n",(0,a.jsx)(e.p,{children:"默认情况下加密任务每次都会从服务端请求一个随机的key用于加密, 在不同加密任务中生成的文件无法兼容使用。 如果指定了KeySeed，相同的的KeySeed会生成相同的加密Key, 这个选项可以与之前的“Only Encrypt Jar Files”用于更新现有应用。这个选项仅对授权用户有效。"}),"\n",(0,a.jsx)(e.h3,{children:"执行加密任务"}),"\n",(0,a.jsx)(e.p,{children:"请等待一段时间，待加密任务完成之后，您可以在输出文件夹中看到输出的加密应用。"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://protector4j.com/resources/screenshots/encryption.png",alt:""})}),"\n",(0,a.jsx)(e.h3,{children:"运行加密的应用"}),"\n",(0,a.jsxs)(e.p,{children:["进入到输出文件夹,  执行 ",(0,a.jsx)(e.code,{children:"tomcat/bin/startup.sh"})," 或 ",(0,a.jsx)(e.code,{children:"tomcat/bin/startup.bat"})," 以启动应用"]}),"\n",(0,a.jsxs)(e.h3,{children:[(0,a.jsx)(e.code,{children:"META-INF/classes"})," 在哪里"]}),"\n",(0,a.jsx)(e.p,{children:"你可以在webapps文件夹中找到你的应用，但是原来的WEB-INF/classes不再存在了，为了能够保护应用结构，避免外部用户获取类名等信息，我们已经将WEB-INF/classes打包进WEB-INF/vlxapp.jar，这是我们私有的一个加密jar格式。"}),"\n",(0,a.jsx)(e.h4,{children:"WEB-INF/vlxapp.jar"}),"\n",(0,a.jsx)(e.p,{children:"If the application is for macOS or Linux and is generated under Windows,\nplease execute add-executable-permission.sh first to give the program executable permission."}),"\n",(0,a.jsx)(e.h4,{children:"注意事项"}),"\n",(0,a.jsxs)(e.p,{children:["如果这个程序的目标平台是macOS或者Linux，但是在Windows下生成，在首次使用时请在目标平台上运行",(0,a.jsx)(e.code,{children:"add-executable-permission.sh"}),"，以给予程序运行权限。"]}),"\n",(0,a.jsx)(e.h2,{id:"tomcat-web",children:"使用命令行工具加密Tomcat Web应用"}),"\n",(0,a.jsx)(e.h3,{children:"配置文件"}),"\n",(0,a.jsx)(e.p,{children:"命令行工具需要指定一个任务文件作为参数"}),"\n",(0,a.jsxs)(e.p,{children:["在",(0,a.jsx)(e.code,{children:"task-templates"}),"文件夹中找到",(0,a.jsx)(e.code,{children:"tomcat-task.yml"}),"，复制并且修改"]}),"\n",(0,a.jsx)(e.pre,{language:"yaml",code:"# Available values: 8,11,17\njavaVersion: 8\n\n# The war files that need to be encrypted\nwarFiles: []\n# Only encrypt the jar files, do not deploy the runtime\n# This option is used while upgrading an existing application\nonlyEncryptJarFiles: false\n\n## [ Output Options ]\n# The output folder\noutputFolder: ''\n# Create a new and unique folder for the application, the folder name is like p4j-&lt;taskId&gt;\ncreateNewFolder: true\n# Fixed key seed, only avaiable for licensed user\n# Jars encrypted in different tasks can be used together with same key seed\nkeySeed: ''\n# The target platforms, available values: [win, linux, mac] or emtpy for current platforms\n# if you need the support for win32, linux32 and linux-aarch64, the addon need to be purchased, please visit https://protector4j.com/addons\nplatforms: []\n",children:(0,a.jsx)(e.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-comment)"># Available values: 8,11,17</span></span>\n<span><span style="color: var(--shiki-token-keyword)">javaVersion</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">8</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># The war files that need to be encrypted</span></span>\n<span><span style="color: var(--shiki-token-keyword)">warFiles</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Only encrypt the jar files, do not deploy the runtime</span></span>\n<span><span style="color: var(--shiki-token-comment)"># This option is used while upgrading an existing application</span></span>\n<span><span style="color: var(--shiki-token-keyword)">onlyEncryptJarFiles</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">## [ Output Options ]</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The output folder</span></span>\n<span><span style="color: var(--shiki-token-keyword)">outputFolder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Create a new and unique folder for the application, the folder name is like p4j-&amp;lt;taskId&amp;gt;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">createNewFolder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Fixed key seed, only avaiable for licensed user</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Jars encrypted in different tasks can be used together with same key seed</span></span>\n<span><span style="color: var(--shiki-token-keyword)">keySeed</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The target platforms, available values: [win, linux, mac] or emtpy for current platforms</span></span>\n<span><span style="color: var(--shiki-token-comment)"># if you need the support for win32, linux32 and linux-aarch64, the addon need to be purchased, please visit https://protector4j.com/addons</span></span>\n<span><span style="color: var(--shiki-token-keyword)">platforms</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(e.h3,{children:"执行加密任务"}),"\n",(0,a.jsx)(e.p,{children:"进入到Protector4J文件夹执行下面命令"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"On Linux or macOS"})}),"\n",(0,a.jsxs)(e.p,{children:["对于macOS用户，你可以在",(0,a.jsx)(e.code,{children:"Protector4J.app/Contents/protector4j-mac"}),"下找到cli工具"]}),"\n",(0,a.jsx)(e.pre,{language:"bash",code:"./p4j -t tomcat -f path-of-task-file\n",children:(0,a.jsx)(e.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">./p4j -t tomcat -f path-of-task-file</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"On Windows"})}),"\n",(0,a.jsx)(e.pre,{language:"bash",code:"p4j -t tomcat -f path-of-task-file\n",children:(0,a.jsx)(e.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">p4j -t tomcat -f path-of-task-file</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(e.p,{children:"> -t task type\n>\n> -f task file"}),"\n",(0,a.jsxs)(e.p,{children:["可以运行",(0,a.jsx)(e.code,{children:"p4j --help"}),"查看详细参数"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"添加用户信息运行"})}),"\n",(0,a.jsx)(e.pre,{code:"./p4j -t tomcat -f path-of-task-file -u email -p password\n",children:(0,a.jsx)(e.code,{children:"./p4j -t tomcat -f path-of-task-file -u email -p password\n"})}),"\n",(0,a.jsx)(e.h3,{children:"查看结果"}),"\n",(0,a.jsx)(e.p,{children:"加密任务完成之后，请前往输出文件夹查看结果。"}),"\n",(0,a.jsx)(e.h3,{children:"运行加密的应用"}),"\n",(0,a.jsxs)(e.p,{children:["进入到输出文件夹,  执行 ",(0,a.jsx)(e.code,{children:"tomcat/bin/startup.sh"})," 或 ",(0,a.jsx)(e.code,{children:"tomcat/bin/startup.bat"})," 以启动应用"]}),"\n",(0,a.jsxs)(e.h3,{children:[(0,a.jsx)(e.code,{children:"META-INF/classes"})," 在哪里"]}),"\n",(0,a.jsx)(e.p,{children:"你可以在webapps文件夹中找到你的应用，但是原来的WEB-INF/classes不再存在了，为了能够保护应用结构，避免外部用户获取类名等信息，我们已经将WEB-INF/classes打包进WEB-INF/vlxapp.jar，这是我们私有的一个加密jar格式。"}),"\n",(0,a.jsx)(e.h4,{children:"WEB-INF/vlxapp.jar"}),"\n",(0,a.jsx)(e.p,{children:"If the application is for macOS or Linux and is generated under Windows,\nplease execute add-executable-permission.sh first to give the program executable permission."}),"\n",(0,a.jsx)(e.h4,{children:"注意事项"}),"\n",(0,a.jsxs)(e.p,{children:["如果这个程序的目标平台是macOS或者Linux，但是在Windows下生成，在首次使用时请在目标平台上运行",(0,a.jsx)(e.code,{children:"add-executable-permission.sh"}),"，以给予程序运行权限。"]})]})}var o=!0;e.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(t,n)})):t(n)}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=9895)}),_N_E=n.O()}]);