(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[486],{1501:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/protect-javase-app",function(){return a(5645)}])},5645:function(n,s,a){"use strict";a.r(s),a.d(s,{__N_SSG:function(){return l}});var e=a(5893),o=a(1151);function r(n){let s=Object.assign({h1:"h1",h2:"h2",p:"p",a:"a",h3:"h3",img:"img",strong:"strong",h4:"h4",code:"code",ol:"ol",li:"li",pre:"pre"},(0,o.ah)(),n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s.h1,{children:"保护JavaSE应用程序"}),"\n",(0,e.jsx)(s.h2,{id:"",children:"入门视频"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.a,{href:"https://www.youtube.com/watch?v=MQf9IiDHQ18",children:"▶️ https://www.youtube.com/watch?v=MQf9IiDHQ18"})}),"\n",(0,e.jsx)(s.h2,{id:"",children:"下载"}),"\n",(0,e.jsxs)(s.p,{children:["访问 ",(0,e.jsx)(s.a,{href:"https://protector4j.com/download",children:"https://protector4j.com/download"})," 下载最新版。"]}),"\n",(0,e.jsx)(s.h2,{id:"",children:"安装"}),"\n",(0,e.jsx)(s.h3,{children:"Windows 与 Linux"}),"\n",(0,e.jsxs)(s.p,{children:["没有特别的安装步骤, 只需要",(0,e.jsx)(s.a,{href:"https://protector4j.com/download",children:"下载"}),"压缩包并解压即可。"]}),"\n",(0,e.jsx)(s.h3,{children:"macOS"}),"\n",(0,e.jsxs)(s.p,{children:[(0,e.jsx)(s.a,{href:"https://protector4j.com/download",children:"下载"}),"dmg文件并拖拽Protector4J到Applications, 程序的实际内容在Protector4J.app/Contents/protector4j-mac"]}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/mac-app-installation.png",alt:""})}),"\n",(0,e.jsx)(s.h2,{id:"gui-java-se",children:"使用GUI工具加密JavaSE应用"}),"\n",(0,e.jsxs)(s.p,{children:["进入Protector4J文件夹， 运行",(0,e.jsx)(s.strong,{children:"p4j-ui[.exe]"})," , 你将会看到下面的用户界面"]}),"\n",(0,e.jsx)(s.p,{children:"对于macOS用户, 像普通mac应用一样双击Protector4J.app即可"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/ui-tool.png",alt:""})}),"\n",(0,e.jsx)(s.h3,{children:"登录"}),"\n",(0,e.jsx)(s.p,{children:"如果你已经购买了授权,  请点击右上角的登录按钮，输入用户信息，如果没有授权，您仍然可以试用这个工具"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/login-dialog.png",alt:""})}),"\n",(0,e.jsx)(s.h3,{children:"选择应用类型"}),"\n",(0,e.jsx)(s.p,{children:'在程序类型页面点击"JavaSE Application"按钮。'}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/app-type.png",alt:""})}),"\n",(0,e.jsx)(s.h3,{children:"选择需要加密的jar/war文件"}),"\n",(0,e.jsx)(s.p,{children:"选择需要加密的jar/war文件，可以单选或者多选"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/choose-jars.png",alt:""})}),"\n",(0,e.jsx)(s.h4,{children:"选项"}),"\n",(0,e.jsx)(s.h4,{children:"Just encrypt jar files"}),"\n",(0,e.jsx)(s.p,{children:"只加密jar文件，不输出整个jre, 这个选项通常与KeySeed特性结合使用，用于更新现有的程序。"}),"\n",(0,e.jsx)(s.h3,{children:"创建可执行文件"}),"\n",(0,e.jsx)(s.p,{children:"创建用于启动应用的可执行文件， 请不要添加.exe扩展名."}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/create-exe-file.png",alt:""})}),"\n",(0,e.jsx)(s.h4,{children:"隐藏命令行窗口"}),"\n",(0,e.jsx)(s.p,{children:"这个选项仅对Windows下的GUI程序有效，用于隐藏程序执行时的命令行窗口"}),"\n",(0,e.jsx)(s.h4,{children:"JVM选项"}),"\n",(0,e.jsx)(s.p,{children:"设置JVM选项，如-Xmx与-Xms等，以空格或者换行分割。"}),"\n",(0,e.jsx)(s.h3,{children:"输出"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/output-page.png",alt:""})}),"\n",(0,e.jsx)(s.h4,{children:"Java版本选择"}),"\n",(0,e.jsx)(s.p,{children:"选择对应的Java版本, 支持Java 8, Java 11 and Java 17."}),"\n",(0,e.jsx)(s.h4,{children:"创建新文件夹"}),"\n",(0,e.jsxs)(s.p,{children:["默认选择, 加密任务会在输出文件夹中创建一个名为 ",(0,e.jsx)(s.code,{children:"p4j-[task-id]"}),"的文件夹, 最终输出的结果存储在这个文件夹中。"]}),"\n",(0,e.jsx)(s.h4,{children:"包含JavaFX"}),"\n",(0,e.jsx)(s.p,{children:"如果是JavaFX应用请选择此项"}),"\n",(0,e.jsx)(s.h4,{children:"SWT Application"}),"\n",(0,e.jsx)(s.p,{children:"如果是SWT应用请选择此项。"}),"\n",(0,e.jsx)(s.h4,{children:"KeySeed"}),"\n",(0,e.jsx)(s.p,{children:"默认情况下加密任务每次都会从服务端请求一个随机的key用于加密, 在不同加密任务中生成的文件无法兼容使用。 如果指定了KeySeed，相同的的KeySeed会生成相同的加密Key, 这个选项可以与之前的“Only Encrypt Jar Files”用于更新现有应用。这个选项仅对授权用户有效。"}),"\n",(0,e.jsx)(s.h3,{children:"执行加密任务"}),"\n",(0,e.jsx)(s.p,{children:"请等待一段时间，待加密任务完成之后，您可以在输出文件夹中看到输出的加密应用。"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:"https://protector4j.com/resources/screenshots/encryption.png",alt:""})}),"\n",(0,e.jsx)(s.h3,{children:"运行加密的应用"}),"\n",(0,e.jsx)(s.p,{children:"有三种方式运行加密后的应用"}),"\n",(0,e.jsxs)(s.ol,{children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用exe文件运行"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"使用加密任务生成的可执行文件运行加密应用"}),"\n",(0,e.jsxs)(s.ol,{start:"2",children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用脚本运行"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"使用与exe文件同名的脚本文件运行应用，如果你打开这个脚本文件，你可以看到我们如何使用传统的Java命令运行程序。"}),"\n",(0,e.jsxs)(s.ol,{start:"3",children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用传统的Java命令运行程序"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"你也可以使用传统的Java命令手动运行程序，命令的格式与传统Java命令相同。"}),"\n",(0,e.jsx)(s.p,{children:"我们可以在输出文件夹中看到一个命名vlxjre的文件夹，这是我们定制的jre运行环境，同时加密后的jar文件存储在vlxlib文件夹中。"}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:'vlxjre/bin/java -jar vlxlib/xxx.jar\nvlxjre/bin/java -cp vlxlib/xxx.jar MainClass\nvlxjre/bin/java -cp "vlxlib/*" MainClass\nvlxjre/bin/java -Xms512M -Xmx1024m -cp "vlxlib/*" MainClass\n',children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -jar vlxlib/xxx.jar</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -cp vlxlib/xxx.jar MainClass</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -cp </span><span style="color: var(--shiki-token-string-expression)">&quot;vlxlib/*&quot;</span><span style="color: var(--shiki-color-text)"> MainClass</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -Xms512M -Xmx1024m -cp </span><span style="color: var(--shiki-token-string-expression)">&quot;vlxlib/*&quot;</span><span style="color: var(--shiki-color-text)"> MainClass</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.strong,{children:"Java 8 当前不支持使用vlxjre/bin/java -jar的方式运行, 请使用vlxjre/bin/java -cp 的方式"})}),"\n",(0,e.jsx)(s.h4,{children:"注意事项"}),"\n",(0,e.jsxs)(s.p,{children:["如果这个程序的目标平台是macOS或者Linux，但是在Windows下生成，在首次使用时请在目标平台上运行",(0,e.jsx)(s.code,{children:"add-executable-permission.sh"}),"，以给予程序运行权限。"]}),"\n",(0,e.jsx)(s.h3,{children:"修改exe文件的运行参数"}),"\n",(0,e.jsxs)(s.p,{children:["如果你需要修改exe文件的JVM参数, 编码",(0,e.jsx)(s.code,{children:"exe-name.json"}),", 修改JVMOptions数组的值"]}),"\n",(0,e.jsx)(s.pre,{language:"json",code:'"JArgs"          : [\n  "-DParam1=value1",\n  "-DParam2=value2"\n]\n',children:(0,e.jsx)(s.code,{className:"language-json",children:'<span><span style="color: var(--shiki-token-string-expression)">&quot;JArgs&quot;</span><span style="color: var(--shiki-color-text)">          : [</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&quot;-DParam1=value1&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&quot;-DParam2=value2&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">]</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.h2,{id:"java-se",children:"使用命令行工具加密JavaSE应用"}),"\n",(0,e.jsx)(s.h3,{children:"配置文件"}),"\n",(0,e.jsx)(s.p,{children:"命令行工具需要指定一个任务文件作为参数"}),"\n",(0,e.jsxs)(s.p,{children:["在",(0,e.jsx)(s.code,{children:"task-templates"}),"文件夹中找到",(0,e.jsx)(s.code,{children:"java-task.yml"}),"，复制并且修改"]}),"\n",(0,e.jsx)(s.pre,{language:"yaml",code:"# Available values: 8,11,17\njavaVersion: 8\n\n# The jar files that need to be encrypted\njarFiles: []\n# Only encrypt the jar files, do not deploy the runtime\n# This option is used while upgrading an existing application\nonlyEncryptJarFiles: false\n\n## [ Executable file information ]\n# The executable file name\nexeFileName: ''\n# Hide command line window, only valid for Windows\nhideConsole: false\n# The main class of this Java Application\nmainClass: ''\n# The splash image\nsplash: ''\n# JVM Options\njvmOptions: []\n\n## [ Output Options ]\n# The output folder\noutputFolder: ''\n# Create a new and unique folder for the application, the folder name is like p4j-&lt;taskId&gt;\ncreateNewFolder: true\n# Whether this is a JavaFX application\nincludeJavaFX: false\n# Whether this a swt gui application\nswtApplication: false\n# Fixed key seed, only avaiable for licensed user\n# Jars encrypted in different tasks can be used together with same key seed\nkeySeed: ''\n# The target platforms\n# available values: [win, linux, mac] or empty for current platform\nplatforms: []\n",children:(0,e.jsx)(s.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-comment)"># Available values: 8,11,17</span></span>\n<span><span style="color: var(--shiki-token-keyword)">javaVersion</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">8</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># The jar files that need to be encrypted</span></span>\n<span><span style="color: var(--shiki-token-keyword)">jarFiles</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Only encrypt the jar files, do not deploy the runtime</span></span>\n<span><span style="color: var(--shiki-token-comment)"># This option is used while upgrading an existing application</span></span>\n<span><span style="color: var(--shiki-token-keyword)">onlyEncryptJarFiles</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">## [ Executable file information ]</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The executable file name</span></span>\n<span><span style="color: var(--shiki-token-keyword)">exeFileName</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Hide command line window, only valid for Windows</span></span>\n<span><span style="color: var(--shiki-token-keyword)">hideConsole</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The main class of this Java Application</span></span>\n<span><span style="color: var(--shiki-token-keyword)">mainClass</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The splash image</span></span>\n<span><span style="color: var(--shiki-token-keyword)">splash</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># JVM Options</span></span>\n<span><span style="color: var(--shiki-token-keyword)">jvmOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)">## [ Output Options ]</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The output folder</span></span>\n<span><span style="color: var(--shiki-token-keyword)">outputFolder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Create a new and unique folder for the application, the folder name is like p4j-&amp;lt;taskId&amp;gt;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">createNewFolder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Whether this is a JavaFX application</span></span>\n<span><span style="color: var(--shiki-token-keyword)">includeJavaFX</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Whether this a swt gui application</span></span>\n<span><span style="color: var(--shiki-token-keyword)">swtApplication</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Fixed key seed, only avaiable for licensed user</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Jars encrypted in different tasks can be used together with same key seed</span></span>\n<span><span style="color: var(--shiki-token-keyword)">keySeed</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span></span>\n<span><span style="color: var(--shiki-token-comment)"># The target platforms</span></span>\n<span><span style="color: var(--shiki-token-comment)"># available values: [win, linux, mac] or empty for current platform</span></span>\n<span><span style="color: var(--shiki-token-keyword)">platforms</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.h3,{children:"执行加密任务"}),"\n",(0,e.jsx)(s.p,{children:"进入到Protector4J文件夹执行下面命令"}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.strong,{children:"Linux或macOS"})}),"\n",(0,e.jsxs)(s.p,{children:["对于macOS用户，你可以在",(0,e.jsx)(s.code,{children:"Protector4J.app/Contents/protector4j-mac"}),"下找到cli工具"]}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"./p4j -t java -f path-of-task-file\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">./p4j -t java -f path-of-task-file</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.strong,{children:"Windows"})}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"p4j -t java -f path-of-task-file\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">p4j -t java -f path-of-task-file</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.p,{children:"> -t task type\n>\n> -f task file"}),"\n",(0,e.jsxs)(s.p,{children:["可以运行",(0,e.jsx)(s.code,{children:"p4j --help"}),"查看详细参数"]}),"\n",(0,e.jsx)(s.p,{children:(0,e.jsx)(s.strong,{children:"添加用户信息运行"})}),"\n",(0,e.jsx)(s.pre,{code:"./p4j -t java -f path-of-task-file -u email -p password\n",children:(0,e.jsx)(s.code,{children:"./p4j -t java -f path-of-task-file -u email -p password\n"})}),"\n",(0,e.jsx)(s.h3,{children:"查看结果"}),"\n",(0,e.jsx)(s.p,{children:"加密任务完成之后，请前往输出文件夹查看结果。"}),"\n",(0,e.jsx)(s.h3,{children:"运行加密的应用"}),"\n",(0,e.jsx)(s.p,{children:"有三种方式运行加密后的应用"}),"\n",(0,e.jsxs)(s.ol,{children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用exe文件运行"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"使用加密任务生成的可执行文件运行加密应用"}),"\n",(0,e.jsxs)(s.ol,{start:"2",children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用脚本运行"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"使用与exe文件同名的脚本文件运行应用，如果你打开这个脚本文件，你可以看到我们如何使用传统的Java命令运行程序。"}),"\n",(0,e.jsxs)(s.ol,{start:"3",children:["\n",(0,e.jsx)(s.li,{children:(0,e.jsx)(s.strong,{children:"使用传统的Java命令运行程序"})}),"\n"]}),"\n",(0,e.jsx)(s.p,{children:"你也可以使用传统的Java命令手动运行程序，命令的格式与传统Java命令相同。"}),"\n",(0,e.jsx)(s.p,{children:"我们可以在输出文件夹中看到一个命名vlxjre的文件夹，这是我们定制的jre运行环境，同时加密后的jar文件存储在vlxlib文件夹中。"}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:'vlxjre/bin/java -jar vlxlib/xxx.jar\nvlxjre/bin/java -cp vlxlib/xxx.jar MainClass\nvlxjre/bin/java -cp "vlxlib/*" MainClass\nvlxjre/bin/java -Xms512M -Xmx1024m -cp "vlxlib/*" MainClass\n',children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -jar vlxlib/xxx.jar</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -cp vlxlib/xxx.jar MainClass</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -cp </span><span style="color: var(--shiki-token-string-expression)">&quot;vlxlib/*&quot;</span><span style="color: var(--shiki-color-text)"> MainClass</span></span>\n<span><span style="color: var(--shiki-color-text)">vlxjre/bin/java -Xms512M -Xmx1024m -cp </span><span style="color: var(--shiki-token-string-expression)">&quot;vlxlib/*&quot;</span><span style="color: var(--shiki-color-text)"> MainClass</span></span>\n<span></span>'})})]})}var l=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(r,n)})):r(n)}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=1501)}),_N_E=n.O()}]);